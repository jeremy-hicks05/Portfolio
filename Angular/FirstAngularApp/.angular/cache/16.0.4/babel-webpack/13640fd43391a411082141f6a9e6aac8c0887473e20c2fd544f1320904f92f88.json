{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass SortPipe {\n  transform(value, args) {\n    if (value) {\n      return value.sort((a, b) => {\n        if (a[args] < b[args]) {\n          return -1;\n        } else if (b[args] < a[args]) ;\n      });\n    }\n  }\n}\nSortPipe.ɵfac = function SortPipe_Factory(t) {\n  return new (t || SortPipe)();\n};\nSortPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"sort\",\n  type: SortPipe,\n  pure: true\n});\nexport { SortPipe };","map":{"version":3,"names":["SortPipe","transform","value","args","sort","a","b","pure"],"sources":["C:\\Users\\jhicks\\Source\\Repos\\jeremy-hicks05\\Portfolio\\Angular\\FirstAngularApp\\src\\app\\sort.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { Hero } from './hero';\r\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n\n  transform(value: Hero[], args: string[]): Hero[] {\n    if (value) {\n      return value.sort((a: Hero, b: Hero) => {\r\n        if (a[args] < b[args]) {\r\n          return -1;\r\n        }\r\n        else if(b[args] < a[args])\r\n      })\r\n    }\n  }\n\n}\n"],"mappings":";AAGA,MAGaA,QAAQ;EAEnBC,SAASA,CAACC,KAAa,EAAEC,IAAc;IACrC,IAAID,KAAK,EAAE;MACT,OAAOA,KAAK,CAACE,IAAI,CAAC,CAACC,CAAO,EAAEC,CAAO,KAAI;QACrC,IAAID,CAAC,CAACF,IAAI,CAAC,GAAGG,CAAC,CAACH,IAAI,CAAC,EAAE;UACrB,OAAO,CAAC,CAAC;SACV,MACI,IAAGG,CAAC,CAACH,IAAI,CAAC,GAAGE,CAAC,CAACF,IAAI,CAAC,EAC3B;MAAA,CAAC,CAAC;;EAEN;;AAXWH,QAAQ,C;mBAARA,QAAQ;AAAA;AAARA,QAAQ,C;;QAARA,QAAQ;EAAAO,IAAA;AAAA;SAARP,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}